# Inputs for asset mutations
input AssetCreateInput {
  id: ID
  name: String!
  ticker: String!
}

input AssetCreateManyInput {
  create: [AssetCreateInput!]
  connect: [AssetWhereUniqueInput!]
}

input AssetUpdateInput {
  name: String
  ticker: String
}

input AssetWhereUniqueInput {
  id: ID
}

# Inputs for author mutations
input AuthorCreateInput {
  id: ID
  bio: String
  name: String!
  papers: PaperCreateManyInput
  photo: String
  psuedonym: Boolean
}

input AuthorCreateManyInput {
  create: [AuthorCreateInput!]
  connect: [AuthorWhereUniqueInput!]
}

input AuthorUpdateInput {
  bio: String
  name: String
  # papers: [Paper]
  photo: String
  psuedonym: Boolean
}

input AuthorWhereUniqueInput {
  id: ID
}

# Inputs for file mutations
input FileCreateInput {
  id: ID
  coverImage: String
  latest: Boolean
  pubDate: Time
  source: String
  url: String!
  version: Float
}

input FileCreateManyInput {
  create: [FileCreateInput!]
  connect: [FileWhereUniqueInput!]
}

input FileUpdateInput {
  coverImage: String
  latest: Boolean
  pubDate: Time
  source: String
  url: String
  version: Float
}

input FileWhereUniqueInput {
  id: ID
}

# Inputs for paper mutations
input PaperCreateInput {
  id: ID
  author: [AuthorCreateManyInput]
  asset: [AssetCreateManyInput]
  description: String
  excerpt: String
  file: [FileCreateManyInput]
  pageNum: Int
  title: String!
}

input PaperCreateManyInput {
  create: [PaperCreateInput!]
  connect: [PaperWhereUniqueInput!]
}

input PaperUpdateInput {
  # author: [Author]
  # asset: [Asset]
  description: String
  excerpt: String
  # file: [File]
  pageNum: Int
  title: String
}

input PaperWhereUniqueInput {
  id: ID
}

# Inputs for user mutations
input UserCreateInput {
  id: ID
  name: String!
  email: String!
  password: String!
}

input UserUpdateInput {
  name: String
  email: String
  password: String
}

input UserWhereUniqueInput {
  id: ID
}
