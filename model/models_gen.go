// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type Asset struct {
	ID       string    `json:"id"`
	Name     string    `json:"name"`
	Ticker   string    `json:"ticker"`
	CreateAt time.Time `json:"createAt"`
}

type AssetCreateInput struct {
	ID     *string `json:"id"`
	Name   string  `json:"name"`
	Ticker string  `json:"ticker"`
}

type AssetCreateManyInput struct {
	Create  []*AssetCreateInput      `json:"create"`
	Connect []*AssetWhereUniqueInput `json:"connect"`
}

type AssetUpdateInput struct {
	Name   *string `json:"name"`
	Ticker *string `json:"ticker"`
}

type AssetWhereInput struct {
	ID     *string `json:"id"`
	Name   *string `json:"name"`
	Ticker *string `json:"ticker"`
}

type AssetWhereUniqueInput struct {
	ID *string `json:"id"`
}

type Author struct {
	ID        string    `json:"id"`
	Bio       *string   `json:"bio"`
	Name      string    `json:"name"`
	Papers    []*Paper  `json:"papers"`
	Photo     *string   `json:"photo"`
	Psuedonym *bool     `json:"psuedonym"`
	CreateAt  time.Time `json:"createAt"`
}

type AuthorCreateInput struct {
	ID        *string               `json:"id"`
	Bio       *string               `json:"bio"`
	Name      string                `json:"name"`
	Papers    *PaperCreateManyInput `json:"papers"`
	Photo     *string               `json:"photo"`
	Psuedonym *bool                 `json:"psuedonym"`
}

type AuthorCreateManyInput struct {
	Create  []*AuthorCreateInput      `json:"create"`
	Connect []*AuthorWhereUniqueInput `json:"connect"`
}

type AuthorUpdateInput struct {
	Bio       *string `json:"bio"`
	Name      *string `json:"name"`
	Photo     *string `json:"photo"`
	Psuedonym *bool   `json:"psuedonym"`
}

type AuthorWhereUniqueInput struct {
	ID *string `json:"id"`
}

type File struct {
	ID         string     `json:"id"`
	CoverImage *string    `json:"coverImage"`
	Latest     *bool      `json:"latest"`
	PageNum    *int       `json:"pageNum"`
	PubDate    *time.Time `json:"pubDate"`
	Source     *string    `json:"source"`
	URL        string     `json:"url"`
	Version    *string    `json:"version"`
	CreateAt   time.Time  `json:"createAt"`
}

type FileCreateInput struct {
	ID         *string    `json:"id"`
	CoverImage *string    `json:"coverImage"`
	Latest     *bool      `json:"latest"`
	PageNum    *int       `json:"pageNum"`
	PubDate    *time.Time `json:"pubDate"`
	Source     *string    `json:"source"`
	URL        string     `json:"url"`
	Version    *string    `json:"version"`
}

type FileCreateManyInput struct {
	Create  []*FileCreateInput      `json:"create"`
	Connect []*FileWhereUniqueInput `json:"connect"`
}

type FileUpdateInput struct {
	CoverImage *string    `json:"coverImage"`
	Latest     *bool      `json:"latest"`
	PageNum    *int       `json:"pageNum"`
	PubDate    *time.Time `json:"pubDate"`
	Source     *string    `json:"source"`
	URL        *string    `json:"url"`
	Version    *string    `json:"version"`
}

type FileWhereUniqueInput struct {
	ID *string `json:"id"`
}

type Paper struct {
	ID            string    `json:"id"`
	Description   *string   `json:"description"`
	Excerpt       *string   `json:"excerpt"`
	LatestVersion *string   `json:"latestVersion"`
	PrettyID      *int      `json:"prettyId"`
	SubTitle      *string   `json:"subTitle"`
	Title         string    `json:"title"`
	CreateAt      time.Time `json:"createAt"`
}

type PaperCreateInput struct {
	ID            *string `json:"id"`
	Description   *string `json:"description"`
	Excerpt       *string `json:"excerpt"`
	LatestVersion *string `json:"latestVersion"`
	PrettyID      *int    `json:"prettyId"`
	SubTitle      *string `json:"subTitle"`
	Title         string  `json:"title"`
}

type PaperCreateManyInput struct {
	Create  []*PaperCreateInput      `json:"create"`
	Connect []*PaperWhereUniqueInput `json:"connect"`
}

type PaperUpdateInput struct {
	Description   *string `json:"description"`
	Excerpt       *string `json:"excerpt"`
	LatestVersion *string `json:"latestVersion"`
	Title         *string `json:"title"`
}

type PaperWhereInput struct {
	ID       *string `json:"id"`
	PrettyID *int    `json:"prettyId"`
	Title    *string `json:"title"`
}

type PaperWhereUniqueInput struct {
	ID *string `json:"id"`
}

type User struct {
	ID       string    `json:"id"`
	Email    string    `json:"email"`
	Name     string    `json:"name"`
	Password string    `json:"password"`
	CreateAt time.Time `json:"createAt"`
}

type UserCreateInput struct {
	ID       *string `json:"id"`
	Name     string  `json:"name"`
	Email    string  `json:"email"`
	Password string  `json:"password"`
}

type UserUpdateInput struct {
	Name     *string `json:"name"`
	Email    *string `json:"email"`
	Password *string `json:"password"`
}

type UserWhereUniqueInput struct {
	ID *string `json:"id"`
}
